# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- trunk

pool:
  vmImage: ubuntu-latest

coverage:
  status:           #Code coverage status will be posted to pull requests based on targets defined below.
    comments: on    #Off by default. When on, details about coverage for each file changed will be posted as a pull request comment.
    diff:           #diff coverage is code coverage only for the lines changed in a pull request.
      target: 80%   #set this to a desired %. Default is 70%

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    codeCoverageClassFilesDirectories: 'build/classes/main/'
    codeCoverageFailIfEmpty: false
    tasks: 'build'
